apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-android-extensions"
apply plugin: "androidx.navigation.safeargs.kotlin"

apply from: "../deps.gradle"

android {
    compileSdkVersion versionCompileSdk
    buildToolsVersion versionBuildTools

    defaultConfig {
        minSdkVersion versionMinSdk
        targetSdkVersion versionTargetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding = true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin/'
        androidTest.java.srcDirs += 'src/androidTest/kotlin/'
        test.java.srcDirs += 'src/test/kotlin/'
    }
}

dependencies {
    api fileTree(dir: "libs", include: ["*.jar"])
    testImplementation testingDependencies.values()
    androidTestImplementation androidTestingDependencies.values()

    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinversion"
    api "androidx.appcompat:appcompat:$appcompat"
    api "androidx.constraintlayout:constraintlayout:$constraintlayout"

    //Dagger
    api "com.google.dagger:dagger:$dagger"
    api "com.google.dagger:dagger-android:$dagger"
    api "com.google.dagger:dagger-android-support:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"

    //Kotlin
    api "androidx.core:core-ktx:$corektx"
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle"

    //Reactive
    api "android.arch.lifecycle:reactivestreams:$reactivestreams"

    //Logger
    api "com.jakewharton.timber:timber:$timber"

    //Material
    api "com.google.android.material:material:$material"

    //Navigation
    api "androidx.navigation:navigation-fragment-ktx:$navigation"
    api "androidx.navigation:navigation-ui-ktx:$navigation"
    api "androidx.navigation:navigation-runtime-ktx:$navigation"
    androidTestImplementation "androidx.navigation:navigation-testing:$navigation"

    //Work Manager
    api "android.arch.work:work-runtime-ktx:$workmanager"

    //Room
    api "androidx.room:room-runtime:$room"
    api "androidx.room:room-ktx:$room"
    kapt "androidx.room:room-compiler:$room"

    //Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-reactive:$coroutines"

    //Lottie
    api "com.airbnb.android:lottie:$lottieversion"

    //TextDrawable
    api "com.amulyakhare:com.amulyakhare.textdrawable:$textdrawable"

    //Retrofit
    api "com.squareup.retrofit2:retrofit:$retrofit"
    api "com.squareup.retrofit2:retrofit-mock:$retrofit"
    api "com.squareup.retrofit2:converter-gson:$retrofit"
    api "com.squareup.okhttp3:logging-interceptor:$okhttp"

    //Preference
    api "androidx.preference:preference-ktx:$preference"

    //Custom tabs
    api "androidx.browser:browser:$customtab"
}
